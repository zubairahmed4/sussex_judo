# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer

# from tkinter import *
# Explicit imports to satisfy Flake8

import subprocess
from pathlib import Path
from tkinter import Tk, Canvas, Entry, Button, PhotoImage, messagebox


def relative_to_assets(path: str) -> Path:
    OUTPUT_PATH = Path(__file__).parent
    ASSETS_PATH = OUTPUT_PATH / Path(r"./assets/calc_page")
    return ASSETS_PATH / Path(path)


class CalculationPage:
    def __init__(self):
        # Settings
        self.default_font = ('Poppins', 14, "bold")
        self.colour = "white"

        self.messagebox = None
        # Create Window
        self.window = Tk()
        self.window.title("Calculation Page - North Sussex Judo")
        self.window.iconbitmap("./assets/icon.ico")
        self.window.geometry("500x500")
        self.window.configure(bg="#FFFFFF")

        self.canvas = Canvas(
            self.window,
            bg="#FFFFFF",
            height=500,
            width=500,
            bd=0,
            highlightthickness=0,
            relief="ridge"
        )
        self.canvas.place(x=0, y=0)

        # Background
        image_image_1 = PhotoImage(file=relative_to_assets("image_1.png"))
        self.image_1 = self.canvas.create_image(250.0, 250.0, image=image_image_1)

        # Title
        image_image_2 = PhotoImage(file=relative_to_assets("image_2.png"))
        self.image_2 = self.canvas.create_image(249.0, 43.0, image=image_image_2)

        # Name Title
        image_image_3 = PhotoImage(file=relative_to_assets("image_3.png"))
        self.image_3 = self.canvas.create_image(53.0, 105.0, image=image_image_3)

        # Name Entry
        entry_image_1 = PhotoImage(file=relative_to_assets("entry_1.png"))
        self.entry_bg_1 = self.canvas.create_image(335.5, 106.21221923828125, image=entry_image_1)
        self.entry_1 = Entry(bd=0, bg="#003499", fg=self.colour, font=self.default_font, highlightthickness=0)
        self.entry_1.place(x=223.68488836288452, y=87.0, width=223.63022327423096, height=36.4244384765625)

        # Current Weight Entry
        image_image_4 = PhotoImage(file=relative_to_assets("image_4.png"))
        self.image_4 = self.canvas.create_image(109.0, 220.0, image=image_image_4)

        entry_image_2 = PhotoImage(file=relative_to_assets("entry_2.png"))
        self.entry_bg_2 = self.canvas.create_image(335.5, 220.21221923828125, image=entry_image_2)
        self.entry_2 = Entry(bd=0, bg="#003499", fg=self.colour, font=self.default_font, highlightthickness=0)
        self.entry_2.place(x=223.68488836288452, y=201.0, width=223.63022327423096, height=36.4244384765625)

        # Comp. Entered Entry
        image_image_5 = PhotoImage(file=relative_to_assets("image_5.png"))
        self.image_5 = self.canvas.create_image(102.0, 334.0, image=image_image_5)

        entry_image_3 = PhotoImage(file=relative_to_assets("entry_3.png"))
        self.entry_bg_3 = self.canvas.create_image(335.5, 334.21221923828125, image=entry_image_3)
        self.entry_3 = Entry(bd=0, bg="#003499", fg=self.colour, font=self.default_font, highlightthickness=0)
        self.entry_3.place(x=223.68488836288452, y=315.0, width=223.63022327423096, height=36.4244384765625)

        # Comp. Weight Entry
        image_image_6 = PhotoImage(file=relative_to_assets("image_6.png"))
        self.image_6 = self.canvas.create_image(105.0, 277.0, image=image_image_6)

        entry_image_4 = PhotoImage(file=relative_to_assets("entry_4.png"))
        self.entry_bg_4 = self.canvas.create_image(335.5, 277.21221923828125, image=entry_image_4)
        self.entry_4 = Entry(bd=0, bg="#0056FF", fg=self.colour, font=self.default_font, highlightthickness=0)
        self.entry_4.place(x=223.68488836288452, y=258.0, width=223.63022327423096, height=36.4244384765625)

        # Coaching Hours Entry
        image_image_7 = PhotoImage(file=relative_to_assets("image_7.png"))
        self.image_7 = self.canvas.create_image(109.0, 391.0, image=image_image_7)

        entry_image_5 = PhotoImage(file=relative_to_assets("entry_5.png"))
        self.entry_bg_5 = self.canvas.create_image(335.5, 391.21221923828125, image=entry_image_5)
        self.entry_5 = Entry(bd=0, bg="#0056FF", fg=self.colour, font=self.default_font, highlightthickness=0)
        self.entry_5.place(x=223.68488836288452, y=372.0, width=223.63022327423096, height=36.4244384765625)

        # Training Plan Entry
        image_image_8 = PhotoImage(file=relative_to_assets("image_8.png"))
        self.image_8 = self.canvas.create_image(95.0, 163.0, image=image_image_8)

        entry_image_6 = PhotoImage(file=relative_to_assets("entry_6.png"))
        self.entry_bg_6 = self.canvas.create_image(335.5, 163.21221923828125, image=entry_image_6)
        self.entry_6 = Entry(bd=0, bg="#0056FF", fg=self.colour, font=self.default_font, highlightthickness=0)
        self.entry_6.place(x=223.68488836288452, y=144.0, width=223.63022327423096, height=36.4244384765625)

        # Functions
        def validate_inputs():
            # Check if all fields are filled
            if not all(entry.get() for entry in [self.entry_1, self.entry_2, self.entry_3,
                                                 self.entry_4, self.entry_5, self.entry_6]):
                messagebox.showerror("Error - North Sussex Judo", "Please fill in all fields")
                return False
            # Check if inputs are valid (you can add more validation logic as needed)
            try:
                float(self.entry_2.get())
                float(self.entry_3.get())
                float(self.entry_4.get())
                int(self.entry_5.get())
            except ValueError:
                messagebox.showerror("Error - North Sussex Judo", "Please enter valid numeric values")
                return False
            # Check if the training plan is valid
            try:
                if self.entry_6.get() not in ["Beginner", "B", "b", "Intermediate", "I", "i", "Elite", "E", "e"]:
                    raise ValueError("Invalid Training Plan")
            except ValueError:
                messagebox.showerror("Error - North Sussex Judo", "Invalid Training Plan")
                return False
            return True

        def submit_clicked():
            if validate_inputs():
                name = self.entry_1.get()
                weight = float(self.entry_2.get())
                comp_entered = float(self.entry_3.get())
                comp_weight = float(self.entry_4.get())
                coaching_hours = int(self.entry_5.get())
                training_plan = str(self.entry_6.get())

                self.window.destroy()
                from results_page import ResultsPage
                ResultsPage(name, weight, comp_entered, comp_weight, coaching_hours,
                             training_plan)


        # Submit Button
        button_image_1 = PhotoImage(file=relative_to_assets("button_1.png"))
        self.button_1 = Button(image=button_image_1, borderwidth=0, highlightthickness=0,
                               command=submit_clicked, relief="flat")
        self.button_1.place(x=170.0, y=433.0, width=160.0, height=40.0)

        self.window.resizable(False, False)
        self.window.mainloop()


if __name__ == "__main__":
    calc_page = CalculationPage()
